apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '3'
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["172.16.4.101"],"port":22,"protocol":"TCP","serviceName":"default:cbshell-loadbalancer","allNodes":false}]
  creationTimestamp: '2024-05-03T22:47:54Z'
  generation: 4
  labels:
    {{- range $key, $val := .Values.labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end}}
  managedFields:
    - apiVersion: apps/v1
      manager: agent
      operation: Update
      time: '2024-05-03T22:56:01Z'
    - apiVersion: apps/v1
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-05-03T22:56:01Z'
  name: cbshell
  namespace: default
  resourceVersion: '2736100'
  uid: befc18fc-601e-41b9-922e-071bc5febb46
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-default-cbshell
      {{- range $key, $val := .Values.labels }}
      {{ $key }}: {{ $val | quote }}
      {{- end}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-default-cbshell
        {{- range $key, $val := .Values.labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      namespace: default
    spec:
      containers:
        - image: bpfx/cbshell
          imagePullPolicy: Always
          name: shell-0
          ports:
            - containerPort: 22
              name: cbshell-ssh
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: "/home"
              name: home
              {{- if .Values.persistence.additionalMounts }}
                {{- .Values.persistence.additionalMounts | toYaml | nindent 14 }}
              {{- end }}
            - mountPath: "/tmp/file"
              name: authorizedkeys
          command:
            - sh
            - -c
            - (mkdir -p /home/bob/.ssh; cp /tmp/file/authorized_keys /home/bob/.ssh; chown -R 1000:1000 /home/bob; chmod 0700 /home/bob/.ssh; chmod 0600 /home/bob/.ssh/authorized_keys)
      initContainer:
        - name: mount home .ssh 
          image: bpfx/cbshell
          volumeMounts:
            - mountPath: "/tmp/file"
              name: authorizedkeys

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: home
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default ("didntnamethis") }}
            {{- else }}
              emptyDir: { }
              {{- end }}
              {{- if .Values.persistence.additionalVolumes }}
                {{- .Values.persistence.additionalVolumes | toYaml | nindent 12}}
              {{- end }}
        - name: authorizedkeys
          secret:
            secretName: {{ .Chart.Name}}-secret
      
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-05-03T22:50:10Z'
      lastUpdateTime: '2024-05-03T22:50:10Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
    - lastTransitionTime: '2024-05-03T22:47:54Z'
      lastUpdateTime: '2024-05-03T22:56:01Z'
      message: ReplicaSet "cbshell-66f79d4959" is progressing.
      reason: ReplicaSetUpdated
      status: 'True'
      type: Progressing
  observedGeneration: 4
  readyReplicas: 1
  replicas: 2
  unavailableReplicas: 1
  updatedReplicas: 1
